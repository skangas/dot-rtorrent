# ~/.rtorrent.rc

### Paths
directory = ~/download/bittorrent/
session = ~/.rtorrent-session

### Port
port_range = 42826-42826
port_random = yes

# network.http.max_open.set = 50
# network.max_open_files.set = 600
# network.max_open_sockets.set = 300

### Enable DHT

# Enable DHT support for trackerless torrents or when all trackers are down.
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately).
# The default is "off". For DHT to work, a session directory must be defined.
dht = auto

# UDP port to use for DHT. 
dht_port = 6881

peer_exchange = yes

# Preallocate files; reduces defragmentation on filesystems.
system.file_allocate.set = yes

### Performance
max_memory_usage = 2147483648
#hash_read_ahead = 64
check_hash = no

# CURL option to lower DNS timeout. Default: `60`.
network.http.dns_cache_timeout.set = 25

# Max packet size using xmlrpc. Default: `524288` (xmlrpc_size_limit)
network.xmlrpc.size_limit.set = 2M

# Maximum and minimum number of peers to connect to per torrent.
#
#throttle.min_peers.normal.set = 40
#throttle.max_peers.normal.set = 100

# Same as above but for seeding completed torrents (-1 = same as downloading)
#
#throttle.min_peers.seed.set = 10
#throttle.max_peers.seed.set = 50

encoding_list = UTF-8
#scgi_local = ~/.rtorrent-session/rpc.socket
scgi_port = 127.0.0.1:5000
xmlrpc_dialect=i8

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# The example value allows incoming encrypted connections, starts unencrypted
# outgoing connections but retries with encryption if they fail, preferring
# plaintext to RC4 encryption after the encrypted handshake
#encryption = allow_incoming,try_outgoing,enable_retry
encryption = allow_incoming,try_outgoing,enable_retry,prefer_plaintext

# Each watch directory adds torrents with the final destination stored
# in the "custom1" string of the download. You can check this string with
# ctrl-X then "print=$d.get_custom1=" in the client.

schedule = watch_1,10,10,"load_start=~/download/torrents/*.torrent,d.set_custom1=~/download/"
schedule = watch_2,10,10,"load=~/download/torrents/film/*.torrent,d.set_custom1=~/Film/"
schedule = watch_3,10,10,"load_start=~/download/torrents/music/*.torrent,d.set_custom1=~/music/incoming/"
schedule = watch_4,10,10,"load=~/download/torrents/tv/*.torrent,d.set_custom1=~/Film/TV/"
schedule = watch_5,10,10,"load_start=~/download/torrents/warez/*.torrent,d.set_custom1=~/warez/"
schedule = watch_6,10,10,"load_start=~/download/torrents/books/*.torrent,d.set_custom1=~/books/incoming"
schedule = watch_7,10,10,"load_start=~/download/torrents/magazines/*.torrent,d.set_custom1=~/books/magazines"
schedule = watch_8,10,10,"load_start=~/download/torrents/comics/*.torrent,d.set_custom1=~/books/comics"
schedule = watch_88,10,10,"load=~/download/torrents/nomove/*.torrent"
schedule = watch_99,10,10,"load_start=~/download/torrents/other/*.torrent,d.set_custom1=~/upload/.incoming"

######## SEED FROM EXTERNAL USB #############
schedule = seed_1,10,10,"load=\"~/download/torrents/external/btn/*.torrent\",d.set_directory=/mnt/usb/seed/btn,d.start="
schedule = seed_2,10,10,"load=\"~/download/torrents/external/film/*.torrent\",d.set_directory=/mnt/usb/seed/film,d.start="
schedule = seed_3,10,10,"load=\"~/download/torrents/external/waffles/*.torrent\",d.set_directory=/mnt/usb/seed/waffles,d.start="
schedule = seed_99,10,10,"load=\"~/download/torrents/external/other/*.torrent\",d.set_directory=/mnt/usb/seed/other,d.start="


# different series
schedule = watch_9,10,10,"load_start=\"~/download/torrents/tv/American Dad/*.torrent\",\"d.set_custom1=\\\"/mnt/media/tv/American Dad\\\"\""
schedule = watch_10,10,10,"load_start=\"~/download/torrents/tv/Archer/*.torrent\",\"d.set_custom1=\\\"/mnt/media/tv/Archer\\\"\""
schedule = watch_11,10,10,"load_start=\"~/download/torrents/tv/Breaking Bad/*.torrent\",\"d.set_custom1=\\\"/mnt/media/tv/Breaking Bad\\\"\""
schedule = watch_12,10,10,"load_start=\"~/download/torrents/tv/Futurama/*.torrent\",\"d.set_custom1=\\\"/mnt/media/tv/Futurama\\\"\""
schedule = watch_13,10,10,"load_start=\"~/download/torrents/tv/Family Guy/*.torrent\",\"d.set_custom1=\\\"/mnt/media/tv/Family Guy\\\"\""
schedule = watch_14,10,10,"load_start=\"~/download/torrents/tv/South Park/*.torrent\",\"d.set_custom1=\\\"/mnt/media/tv/South Park\\\"\""
schedule = watch_15,10,10,"load_start=\"~/download/torrents/tv/The Walking Dead/*.torrent\",\"d.set_custom1=\\\"/mnt/media/tv/The Walking Dead\\\"\""
schedule = watch_16,10,10,"load_start=\"~/download/torrents/tv/Dexter/*.torrent\",\"d.set_custom1=\\\"/mnt/media/tv/Dexter\\\"\""
schedule = watch_17,10,10,"load_start=\"~/download/torrents/tv/Doctor Who/*.torrent\",\"d.set_custom1=\\\"/mnt/media/tv/Doctor Who\\\"\""

schedule = watch_19,10,10,"load=~/download/torrents/pth/*.torrent,d.set_directory=~/music/Hip-Hop"

#schedule = watch_666,10,10,"load=\"/home/skangas/wip/wcd2pth-sort/out/download/*.torrent\",d.set_directory=\"~/music/incoming\",d.check_hash="

#schedule = watch_801,10,10,"load=\"~/download/torrents/pth/upload/*.torrent\",d.directory.set=\"~/upload/pth\",d.check_hash=,d.start="
#schedule = watch_802,10,10,"load=\"~/download/torrents/pth/better/*.torrent\",d.directory.set=\"~/upload/pth/better\",d.start="

#schedule = watch_821,10,10,"load=\"~/download/torrents/apl/upload/*.torrent\",d.directory.set=\"~/upload/pth\",d.check_hash=,d.start="

schedule = watch_843,10,10,"load_start=\"~/download/torrents/ptp/seed/*.torrent\",\"d.set_custom1=\\\"~/upload/ptp/seed\\\"\""

schedule = watch_tmpptp,10,10,"load=\"~/foobar/*.torrent\",d.directory.set=\"~/saved/film\",d.check_hash="

#schedule = watch_901,10,10,"load_start=\"~/download/torrents/seed/pth/*.torrent\","
#schedule = watch_902,10,10,"load_start=\"~/download/torrents/seed/apollo/*.torrent\","

#schedule = tied_directory,10,10,start_tied=
#schedule = untied_directory,10,10,close_untied=

# Taken from Archlinux Wiki @ 2016-12-27

# insert a method with the alias 'checkdirs1'
# 1) returns true if the current path of the torrent data is not equal to the value of custom1
# 2) otherwise, returns false
system.method.insert=checkdirs1,simple,"not=\"$equal={d.get_custom1=,d.get_base_path=}\""

# insert a method with the alias 'movecheck1'
# 1) returns true if all 3 commands return true ('result of checkdirs1' && 'torrent is 100% done', 'custom1 variable is set')
# 2) otherwise, returns false
system.method.insert=movecheck1,simple,"and={checkdirs1=,d.get_complete=,d.get_custom1=}"

# insert a method with the alias 'movedir1'
# (a series of commands, separated by ';') 
# 1) "set path of torrent to equal the value of custom1";
# 2) "mv -u <current data path> <custom1 path>";
# 3) "clear custom1", "stop the torrent","resume the torrent"
# 4) stop the torrent
# 5) start the torrent (to get the torrent to update the 'base path')
system.method.insert=movedir1,simple,"d.set_directory=$d.get_custom1=;execute=mv,-u,$d.get_base_path=,$d.get_custom1=;d.set_custom1=;d.stop=;d.start="

# set a key with the name 'move_hashed1' that is triggered by the hash_done event.
# 1) When hashing of a torrent completes, this custom key will be triggered.
# 2) when triggered, execute the 'movecheck1' method and check the return value.
# 3) if the 'movecheck' method returns 'true', execute the 'movedir1' method we inserted above.
# NOTE-0: *Only* data that has had their hash checked manually with ^R [^R = Control r].
# Or on a rtorrent restart[which initiates a hash check]. Will the data move; ~/torrents/incomplete => ~/torrents/complete for example.
# NOTE-1: 'branch' is an 'if' conditional statement: if(movecheck1){movedir1}
system.method.set_key=event.download.finished,move_hashed1,"branch={$movecheck1=,movedir1=}"

# close on low diskspace
schedule = low_diskspace,15,60,close_low_diskspace=1000M

# system.method.set_key = event.download.finished,<name>,<command>
#   Index 130 String: 'event.download.closed'
#   Index 131 String: 'event.download.erased'
#   Index 132 String: 'event.download.finished'
#   Index 133 String: 'event.download.hash_done'
#   Index 134 String: 'event.download.hash_queued'
#   Index 135 String: 'event.download.hash_removed'
#   Index 136 String: 'event.download.inserted'
#   Index 137 String: 'event.download.inserted_new'
#   Index 138 String: 'event.download.inserted_session'
#   Index 139 String: 'event.download.opened'
#   Index 140 String: 'event.download.paused'
#   Index 141 String: 'event.download.resumed'


## Show currently downloading/uploading in 'active' view
view_sort_current = active,greater=d.get_up_rate=
schedule = filter_active,12,20,"view_filter = active,\"or={d.get_up_rate=,d.get_down_rate=}\" ;view_sort=active"

# Fixme
log.execute = (cat, (cfg.logs), "execute.log")
log.xmlrpc = (cat, (cfg.logs), "xmlrpc.log")
execute.nothrow = bash, -c, (cat, "echo >",\
    (session.path), "rtorrent.pid", " ", (system.pid))
